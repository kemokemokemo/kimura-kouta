//====================================================================================================
//
// 背景処理 (bg.cpp)
// Author (Kimura kouta)
//
//====================================================================================================
#include "bg.h"	//インクルードファイル
#include "renderer.h"
#include "manager.h"
#include "keybord.h"
#include"bullet.h"

//====================================================================================================
// マクロ定義
//==================================================================================================== 
#define PLAYER_SIZE_X	(1280)
#define PLAYER_SIZE_Y	(720)

//====================================================================================================
// プロトタイプ宣言
//====================================================================================================

//====================================================================================================
// グローバル変数
//====================================================================================================
LPDIRECT3DTEXTURE9 CBg::m_pTextureBg[MAX_TEX] = {};

//====================================================================================================
// 描画順番の設定
//====================================================================================================
CBg::CBg(OBJTYPE type) : CScene2D(type)
{

}

//====================================================================================================
// コンストラクタ
//====================================================================================================
CBg::CBg()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CBg::Init(D3DXVECTOR3 pos, float move)
{
	CScene2D::Init();

	SetPos(pos);
	SetSpeed(move);
	return S_OK;
}

//==================================================================================================
//終了処理
//===================================================================================================
void CBg::Uninit(void)
{
	CScene2D::Uninit();
}

//====================================================================================================
//更新処理
//=====================================================================================================
void CBg::Update(void)
{
	CScene2D::BgUpdate();

	D3DXVECTOR3 pos;
	float SizeX = PLAYER_SIZE_X;

	pos = CScene2D::GetPos();

	TexMove();
	CScene2D::SetPos(pos);
}

//========================================================================================================
//描画処理
//========================================================================================================
CBg *CBg::Create(D3DXVECTOR3 pos, float move, int nCnt)
{
	CBg *pBg;

	pBg = new CBg(OBJTYPE_BG);

	pBg->BindTexture(m_pTextureBg[nCnt]);

	pBg->Init(pos, move);

	pBg->SetInitTex(1.0f, 1.0f);
	return pBg;
}

//========================================================================================================
//描画処理
//========================================================================================================
void CBg::Draw(void)
{
	CScene2D::Draw();
}

//========================================================================================================
// テクスチャの読み込み
//========================================================================================================
HRESULT CBg::Load(void)
{
	CRenderer *pRenderer = CManager::GetRenderer();
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_005,
		&m_pTextureBg[0]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_006,
		&m_pTextureBg[1]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_007,
		&m_pTextureBg[2]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_015,
		&m_pTextureBg[3]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_016,
		&m_pTextureBg[4]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_019,
		&m_pTextureBg[5]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_023,
		&m_pTextureBg[6]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_024,
		&m_pTextureBg[7]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_027,
		&m_pTextureBg[8]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_028,
		&m_pTextureBg[9]);

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(
		pDevice,
		TEXTUER_029,
		&m_pTextureBg[10]);

	return S_OK;
}

//========================================================================================================
// テクスチャの破棄
//========================================================================================================
void CBg::Unload(void)
{
	for (int nCnt = 0; nCnt < MAX_TEX; nCnt++)
	{
		// 頂点バッファの開放
		if (m_pTextureBg[nCnt] != NULL)
		{
			m_pTextureBg[nCnt]->Release();
			m_pTextureBg[nCnt] = NULL;
		}
	}
}

//====================================================================================================
// デストラクタ
//=====================================================================================================
CBg::~CBg()
{

}